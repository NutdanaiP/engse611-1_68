const express = require('express');
const cors = require('cors');
const rateLimit = require('express-rate-limit');
const path = require('path');

// import routes
const contactRoutes = require('./routes/contact');
const feedbackRoutes = require('./routes/feedback');
const { getFileStats } = require('./middleware/fileManager');

const app = express();
const PORT = process.env.PORT || 3000;

// Rate limiting
const limiter = rateLimit({
    windowMs: 15 * 60 * 1000, // 15 minutes
    max: 10, // limit each IP to 10 requests per windowMs
    message: {
        success: false,
        message: 'р╕кр╣Ир╕Зр╕Др╕│р╕Вр╕нр╕бр╕▓р╕Бр╣Ар╕Бр╕┤р╕Щр╣Др╕Ы р╣Вр╕Ыр╕гр╕Фр╕ер╕нр╕Зр╣Гр╕лр╕бр╣Ир╕ар╕▓р╕вр╕лр╕ер╕▒р╕З'
    }
});

// Middleware
app.use(cors());
app.use(express.json({ limit: '1mb' }));
app.use(express.urlencoded({ extended: true }));
app.use(express.static('public'));

// Apply rate limiting to API routes
app.use('/api', limiter);

// Routes
app.get('/', (req, res) => {
    res.sendFile(path.join(__dirname, 'public', 'index.html'));
});

// р╣Гр╕Кр╣Й contactRoutes р╣Бр╕ер╕░ feedbackRoutes
app.use('/api/contact', contactRoutes);
app.use('/api/feedback', feedbackRoutes);

// GET /api/status - р╕кр╣Ир╕Зр╕кр╕Цр╕▓р╕Щр╕░ API р╣Бр╕ер╕░р╕Ир╕│р╕Щр╕зр╕Щр╕Вр╣Йр╕нр╕бр╕╣р╕е
app.get('/api/status', async (req, res) => {
    try {
        const stats = await getFileStats();
        res.json({
            success: true,
            message: 'API р╕Бр╕│р╕ер╕▒р╕Зр╕Чр╕│р╕Зр╕▓р╕Щр╕Ыр╕Бр╕Хр╕┤',
            timestamp: new Date().toISOString(),
            stats: {
                contacts: stats.contacts,
                feedback: stats.feedback
            }
        });
    } catch (error) {
        console.error('р╣Ар╕Бр╕┤р╕Фр╕Вр╣Йр╕нр╕Ьр╕┤р╕Фр╕Юр╕ер╕▓р╕Фр╣Гр╕Щ GET /api/status:', error);
        res.status(500).json({
            success: false,
            message: 'р╣Ар╕Бр╕┤р╕Фр╕Вр╣Йр╕нр╕Ьр╕┤р╕Фр╕Юр╕ер╕▓р╕Фр╣Гр╕Щр╕Бр╕▓р╕гр╕Фр╕╢р╕Зр╕кр╕Цр╕▓р╕Щр╕░ API'
        });
    }
});

// API documentation
app.get('/api/docs', (req, res) => {
    res.json({
        title: 'р╣Ар╕нр╕Бр╕кр╕▓р╕г Contact Form API',
        version: '1.0.0',
        endpoints: {
            'POST /api/contact': {
                description: 'р╕кр╣Ир╕Зр╕Яр╕нр╕гр╣Мр╕бр╕Хр╕┤р╕Фр╕Хр╣Ир╕н',
                requiredFields: ['name', 'email', 'subject', 'message'],
                optionalFields: ['phone', 'company']
            },
            'GET /api/contact': {
                description: 'р╕Фр╕╢р╕Зр╕Вр╣Йр╕нр╕бр╕╣р╕ер╕Бр╕▓р╕гр╕Хр╕┤р╕Фр╕Хр╣Ир╕нр╕Чр╕▒р╣Йр╕Зр╕лр╕бр╕Ф (р╕кр╕│р╕лр╕гр╕▒р╕Ър╕Ьр╕╣р╣Йр╕Фр╕╣р╣Бр╕е)',
                parameters: {
                    page: 'р╕лр╕бр╕▓р╕вр╣Ар╕ер╕Вр╕лр╕Щр╣Йр╕▓ (р╕Др╣Ир╕▓р╣Ар╕гр╕┤р╣Ир╕бр╕Хр╣Йр╕Щ: 1)',
                    limit: 'р╕Ир╕│р╕Щр╕зр╕Щр╕гр╕▓р╕вр╕Бр╕▓р╕гр╕Хр╣Ир╕нр╕лр╕Щр╣Йр╕▓ (р╕Др╣Ир╕▓р╣Ар╕гр╕┤р╣Ир╕бр╕Хр╣Йр╕Щ: 10)'
                }
            },
            'POST /api/feedback': {
                description: 'р╕кр╣Ир╕Зр╕Др╕зр╕▓р╕бр╕Др╕┤р╕Фр╣Ар╕лр╣Зр╕Щ',
                requiredFields: ['rating', 'comment'],
                optionalFields: ['email']
            },
            'GET /api/feedback/stats': {
                description: 'р╕Фр╕╢р╕Зр╕кр╕Цр╕┤р╕Хр╕┤р╕Др╕зр╕▓р╕бр╕Др╕┤р╕Фр╣Ар╕лр╣Зр╕Щ'
            },
            'GET /api/status': {
                description: 'р╕Фр╕╢р╕Зр╕кр╕Цр╕▓р╕Щр╕░ API р╣Бр╕ер╕░р╕Ир╕│р╕Щр╕зр╕Щр╕Вр╣Йр╕нр╕бр╕╣р╕е'
            }
        }
    });
});

// 404 handler
app.use('*', (req, res) => {
    res.status(404).json({
        success: false,
        message: 'р╣Др╕бр╣Ир╕Юр╕Ъ endpoint р╕Чр╕╡р╣Ир╕гр╣Йр╕нр╕Зр╕Вр╕н'
    });
});

// Error handler
app.use((err, req, res, next) => {
    console.error(err.stack);
    res.status(500).json({
        success: false,
        message: 'р╣Ар╕Бр╕┤р╕Фр╕Вр╣Йр╕нр╕Ьр╕┤р╕Фр╕Юр╕ер╕▓р╕Фр╕ар╕▓р╕вр╣Гр╕Щр╣Ар╕Лр╕┤р╕гр╣Мр╕Яр╣Ар╕зр╕нр╕гр╣М'
    });
});

app.listen(PORT, () => {
    console.log(`ЁЯЪА Contact Form API р╕гр╕▒р╕Щр╕нр╕вр╕╣р╣Ир╕Чр╕╡р╣И http://localhost:${PORT}`);
    console.log(`ЁЯУЦ р╣Ар╕нр╕Бр╕кр╕▓р╕г API: http://localhost:${PORT}/api/docs`);
});